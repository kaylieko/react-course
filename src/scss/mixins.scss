//
// Mixins
//
// 1. Clearfix
// 2. Basic Settings
// 3. Vendor Prefixes
// 4. Borders
// 5. Character Additions
// 6. Build Repetitive Classes
// 7. WebKit Specific
// 8. Flex
// 9. Typhography
// 10. etc
// --------------------------------------------------


//
// 1. Clearfix
// --------------------------------------------------
@mixin clearfix() {

    &:before,
    &:after {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
    }
}


//
// 2. Basic Settings
// --------------------------------------------------
@mixin basic-container($settings) {
    @include borders(map-get($settings, border));

    width: map-get($settings, width);
    height: map-get($settings, height);
    margin: map-get($settings, margin);
    padding: map-get($settings, padding);
    background: map-get($settings, bg-color);
}

@mixin important-container($settings) {
    @include borders(map-get($settings, border));

    width: map-get($settings, width) !important;
    height: map-get($settings, height) !important;
    margin: map-get($settings, margin) !important;
    padding: map-get($settings, padding) !important;
    background: map-get($settings, bg-color) !important;
}

@mixin font-styles($settings) {
    font-size: map-get($settings, size);
    font-weight: map-get($settings, weight);
    font-style: map-get($settings, style);
    text-transform: map-get($settings, transform);
    color: map-get($settings, color);
}


//
// 3. Vendor Prefixes
// Box sizing, transitions, and opacity
// --------------------------------------------------
@mixin box-sizing($boxmodel) {
    -webkit-box-sizing: $boxmodel;
    -moz-box-sizing: $boxmodel;
    box-sizing: $boxmodel;
}

@mixin transition($transition...) {
    -webkit-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

@mixin transition-property($transition-property...) {
    -webkit-transition-property: $transition-property;
    transition-property: $transition-property;
}

@mixin transition-delay($transition-delay) {
    -webkit-transition-delay: $transition-delay;
    transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration...) {
    -webkit-transition-duration: $transition-duration;
    transition-duration: $transition-duration;
}

@mixin transition-timing-function($timing-function) {
    -webkit-transition-timing-function: $timing-function;
    transition-timing-function: $timing-function;
}

@mixin transition-transform($transition...) {
    -webkit-transition: -webkit-transform $transition;
    -moz-transition: -moz-transform $transition;
    -o-transition: -o-transform $transition;
    transition: transform $transition;
}

@mixin transform($transition...) {
    -webkit-transform: $transition;
    -moz-transform: $transition;
    -ms-transform: $transition;
    -o-transform: $transition;
    transform: $transition;
}

@mixin opacity($opacity) {
    $opacity-ie: ($opacity * 100);

    opacity: $opacity;
    filter: alpha(opacity=$opacity-ie); //IE8 filter
}


//
// 4. Borders
// --------------------------------------------------
@mixin borders($settings) {

    @if type-of($settings) !=map {
        border: $settings;
    }

    @else {
        border-radius: map-get($settings, radius) !important;

        @if map-get($settings, same) !=null {
            border: map-get($settings, same) !important;
        }

        @else {
            border-top: map-get($settings, top) !important;
            border-right: map-get($settings, right) !important;
            border-bottom: map-get($settings, bottom) !important;
            border-left: map-get($settings, left) !important;
        }
    }

}


//
// 5. Character Additions
// Insert a character after element -- mainly used for breadcrumbs
// --------------------------------------------------
@mixin char-after($char, $char-color, $char-pad) {
    &:after {
        content: $char;
        color: $char-color;
        padding: $char-pad;
    }
}


//
// 6. Build Repetitive Classes
// --------------------------------------------------
// Build margin-top classes
@mixin make-mt {
    @each $mt in $mg-list {
        .mt-#{$mt} {
            margin-top: $mt + px !important;
        }
    }
}

// Build margin-bottom classes
@mixin make-mb {
    @each $mb in $mg-list {
        .mb-#{$mb} {
            margin-bottom: $mb + px !important;
        }
    }
}

// Build margin-right classes
@mixin make-mr {
    @each $mr in $mg-list {
        .mr-#{$mr} {
            margin-right: $mr + px !important;
        }
    }
}

// Build margin-left classes
@mixin make-ml {
    @each $ml in $mg-list {
        .ml-#{$ml} {
            margin-left: $ml + px !important;
        }
    }
}

// Build padding-top classes
@mixin make-pt {
    @each $pt in $pd-list {
        .pt-#{$pt} {
            padding-top: $pt + px !important;
        }
    }
}

// Build padding-bottom classes
@mixin make-pb {
    @each $pb in $pd-list {
        .pb-#{$pb} {
            padding-bottom: $pb + px !important;
        }
    }
}

@mixin make-pl {
    @each $pl in $pd-list {
        .pl-#{$pl} {
            padding-left: $pl + px !important;
        }
    }
}

@mixin make-pr {
    @each $pr in $pd-list {
        .pr-#{$pr} {
            padding-right: $pr + px !important;
        }
    }
}

@mixin make-fw {
    @each $fw in $fw-list {
        .fw-#{$fw} {
            font-weight: $fw;
        }
    }
}

@mixin make-ft {
    @each $ft in $ft-list {
        .ft-#{$ft} {
            font-size: $ft + px !important;
        }
    }
}

@mixin make-ft-xs {
    @each $ft in $ft-list {
        .ft-#{$ft}-xs {
            font-size: $ft + px !important;
        }
    }
}

@mixin make-fs-xs {
    @each $ft in $ft-list {
        .ft-#{$ft}-xs {
            font-size: $ft + px !important;
        }
    }
}

// Build margin-top classes
@mixin make-mt-xs {
    @each $mt in $mg-list {
        .mt-#{$mt}-xs {
            margin-top: $mt + px !important;
        }
    }
}

// Build margin-bottom classes
@mixin make-mb-xs {
    @each $mb in $mg-list {
        .mb-#{$mb}-xs {
            margin-bottom: $mb + px !important;
        }
    }
}

// Build padding-top classes
@mixin make-pt-xs {
    @each $pt in $pd-list {
        .pt-#{$pt}-xs {
            padding-top: $pt + px !important;
        }
    }
}

// Build padding-bottom classes
@mixin make-pb-xs {
    @each $pb in $pd-list {
        .pb-#{$pb}-xs {
            padding-bottom: $pb + px !important;
        }
    }
}

@mixin make-pl-xs {
    @each $pl in $pd-list {
        .pl-#{$pl}-xs {
            padding-left: $pl + px !important;
        }
    }
}

@mixin make-pr-xs {
    @each $pr in $pd-list {
        .pr-#{$pr}-xs {
            padding-right: $pr + px !important;
        }
    }
}

//
// 7. WebKit Specific
// WebKit-specific. Other browsers will keep their default outline style.
// (Initially tried to also force default via `outline: initial`,
// but that seems to erroneously remove the outline in Firefox altogether.)
// --------------------------------------------------
@mixin tab-focus() {
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px;
}

//
// 8. Flex
// --------------------------------------------------
@mixin flex() {
    display: -webkit-box !important;
    display: -moz-box !important;
    display: -ms-flexbox !important;
    display: -webkit-flex !important;
    display: flex !important;
}

@mixin flex-wrap($wrap) {
    -webkit-flex-wrap: $wrap;
    -ms-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

@mixin flex-direction($dir) {
    -webkit-flex-direction: $dir;
    -ms-flex-direction: $dir;
    flex-direction: $dir;
}

@mixin justify-content($justify) {
    -webkit-justify-content: $justify;
    -ms-justify-content: $justify;
    justify-content: $justify;
}

@mixin align-items($align) {
    -ms-align-items: $align;
    -webkit-align-items: $align;
    align-items: $align;
}

//
// 9. Typhography
// --------------------------------------------------
// Requires inline-block or block for proper styling
@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin link ($link, $hover) {
    a {
        color: $link;

        &:hover {
            color: $hover;
        }
    }
}

//
// 10. Etc
// --------------------------------------------------
@mixin column-count($num) {
    column-count: $num;
    -moz-column-count: $num;
    -webkit-column-count: $num;
}

@mixin box-shadow() {
    box-shadow: rgba(0, 0, 0, .08) 0 2px 4px 0;
    -webkit-box-shadow: rgba(0, 0, 0, .08) 0 2px 4px 0;
    -moz-box-shadow: rgba(0, 0, 0, .08) 0 2px 4px 0;
}